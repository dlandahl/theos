// SPEC: Section 4.5 (gives order of the table)
// SPEC: Section 8.1, 8.2, 8.3, 8.4, 8.5 (gives signatures of the functions)
X(GetTime,                   EFI_STATUS, (EFI_TIME *time_out, EFI_TIME_CAPABILITIES *capabilities_out))
X(SetTime,                   EFI_STATUS, (EFI_TIME *time))
X(GetWakeupTime,             EFI_STATUS, (EFI_BOOLEAN *enabled_out, EFI_BOOLEAN *pending_out, EFI_TIME *time_out))
X(SetWakeupTime,             EFI_STATUS, (EFI_BOOLEAN enable, EFI_TIME *time))
X(SetVirtualAddressMap,      EFI_STATUS, (EFI_UINTN memory_map_size, EFI_UINTN descriptor_size, EFI_UINT32 descriptor_version, EFI_MEMORY_DESCRIPTOR *virtual_map))
X(ConvertPointer,            EFI_STATUS, (EFI_UINTN debug_disposition, void **address))
X(GetVariable,               EFI_STATUS, (EFI_UINT16 *variable_name, EFI_GUID *vendor_guid, EFI_UINT32 *attributes_out, EFI_UINTN *data_size, void *data))
X(GetNextVariableName,       EFI_STATUS, (EFI_UINTN *variable_name_size, EFI_UINT16 *variable_name, EFI_GUID *vendor_guid))
X(SetVariable,               EFI_STATUS, (EFI_UINT16 *variable_name, EFI_GUID *vendor_guid, EFI_UINT32 attributes, EFI_UINTN data_size, void *data))
X(GetNextHighMonotonicCount, EFI_STATUS, (EFI_UINT32 *high_count))
X(ResetSystem,               EFI_STATUS, (EFI_RESET_TYPE reset_type, EFI_STATUS reset_status, EFI_UINTN data_size, void *reset_data))
X(UpdateCapsule,             EFI_STATUS, (EFI_CAPSULE_HEADER **capsule_header_array, EFI_UINTN capsule_count, EFI_PHYSICAL_ADDRESS scatter_gather_list))
X(QueryCapsuleCapabilities,  EFI_STATUS, (EFI_CAPSULE_HEADER **capsule_header_array, EFI_UINTN capsule_count, EFI_UINT64 *max_capsule_size, EFI_RESET_TYPE *reset_type))
X(QueryVariableInfo,         EFI_STATUS, (EFI_UINT32 attributes, EFI_UINT64 *max_variable_storage_size, EFI_UINT64 *remaining_variable_storage_size, EFI_UINT64 *maximum_variable_size))
